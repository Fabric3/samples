// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: price.proto

package org.fabric3.samples.fastquote.price;

public final class PriceProtos {
  private PriceProtos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface PriceOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required sfixed32 venue_id = 1;
    /**
     * <code>required sfixed32 venue_id = 1;</code>
     */
    boolean hasVenueId();
    /**
     * <code>required sfixed32 venue_id = 1;</code>
     */
    int getVenueId();

    // required string symbol = 2;
    /**
     * <code>required string symbol = 2;</code>
     */
    boolean hasSymbol();
    /**
     * <code>required string symbol = 2;</code>
     */
    String getSymbol();
    /**
     * <code>required string symbol = 2;</code>
     */
    com.google.protobuf.ByteString
        getSymbolBytes();

    // optional double bid_size = 3;
    /**
     * <code>optional double bid_size = 3;</code>
     */
    boolean hasBidSize();
    /**
     * <code>optional double bid_size = 3;</code>
     */
    double getBidSize();

    // optional double bid_price = 4;
    /**
     * <code>optional double bid_price = 4;</code>
     */
    boolean hasBidPrice();
    /**
     * <code>optional double bid_price = 4;</code>
     */
    double getBidPrice();

    // optional double ask_size = 5;
    /**
     * <code>optional double ask_size = 5;</code>
     */
    boolean hasAskSize();
    /**
     * <code>optional double ask_size = 5;</code>
     */
    double getAskSize();

    // optional double ask_price = 6;
    /**
     * <code>optional double ask_price = 6;</code>
     */
    boolean hasAskPrice();
    /**
     * <code>optional double ask_price = 6;</code>
     */
    double getAskPrice();

    // required .fastquote.Price.Type type = 7 [default = SPOT];
    /**
     * <code>required .fastquote.Price.Type type = 7 [default = SPOT];</code>
     */
    boolean hasType();
    /**
     * <code>required .fastquote.Price.Type type = 7 [default = SPOT];</code>
     */
    Price.Type getType();
  }
  /**
   * Protobuf type {@code fastquote.Price}
   */
  public static final class Price extends
      com.google.protobuf.GeneratedMessage
      implements PriceOrBuilder {
    // Use Price.newBuilder() to construct.
    private Price(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Price(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Price defaultInstance;
    public static Price getDefaultInstance() {
      return defaultInstance;
    }

    public Price getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Price(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 13: {
              bitField0_ |= 0x00000001;
              venueId_ = input.readSFixed32();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              symbol_ = input.readBytes();
              break;
            }
            case 25: {
              bitField0_ |= 0x00000004;
              bidSize_ = input.readDouble();
              break;
            }
            case 33: {
              bitField0_ |= 0x00000008;
              bidPrice_ = input.readDouble();
              break;
            }
            case 41: {
              bitField0_ |= 0x00000010;
              askSize_ = input.readDouble();
              break;
            }
            case 49: {
              bitField0_ |= 0x00000020;
              askPrice_ = input.readDouble();
              break;
            }
            case 56: {
              int rawValue = input.readEnum();
              Type value = Type.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(7, rawValue);
              } else {
                bitField0_ |= 0x00000040;
                type_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return PriceProtos.internal_static_fastquote_Price_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return PriceProtos.internal_static_fastquote_Price_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Price.class, Builder.class);
    }

    public static com.google.protobuf.Parser<Price> PARSER =
        new com.google.protobuf.AbstractParser<Price>() {
      public Price parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Price(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<Price> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code fastquote.Price.Type}
     */
    public enum Type
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>SPOT = 0;</code>
       */
      SPOT(0, 0),
      ;

      /**
       * <code>SPOT = 0;</code>
       */
      public static final int SPOT_VALUE = 0;


      public final int getNumber() { return value; }

      public static Type valueOf(int value) {
        switch (value) {
          case 0: return SPOT;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Type>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<Type>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Type>() {
              public Type findValueByNumber(int number) {
                return Type.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return Price.getDescriptor().getEnumTypes().get(0);
      }

      private static final Type[] VALUES = values();

      public static Type valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private Type(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:fastquote.Price.Type)
    }

    private int bitField0_;
    // required sfixed32 venue_id = 1;
    public static final int VENUE_ID_FIELD_NUMBER = 1;
    private int venueId_;
    /**
     * <code>required sfixed32 venue_id = 1;</code>
     */
    public boolean hasVenueId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required sfixed32 venue_id = 1;</code>
     */
    public int getVenueId() {
      return venueId_;
    }

    // required string symbol = 2;
    public static final int SYMBOL_FIELD_NUMBER = 2;
    private Object symbol_;
    /**
     * <code>required string symbol = 2;</code>
     */
    public boolean hasSymbol() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string symbol = 2;</code>
     */
    public String getSymbol() {
      Object ref = symbol_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          symbol_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string symbol = 2;</code>
     */
    public com.google.protobuf.ByteString
        getSymbolBytes() {
      Object ref = symbol_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        symbol_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional double bid_size = 3;
    public static final int BID_SIZE_FIELD_NUMBER = 3;
    private double bidSize_;
    /**
     * <code>optional double bid_size = 3;</code>
     */
    public boolean hasBidSize() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional double bid_size = 3;</code>
     */
    public double getBidSize() {
      return bidSize_;
    }

    // optional double bid_price = 4;
    public static final int BID_PRICE_FIELD_NUMBER = 4;
    private double bidPrice_;
    /**
     * <code>optional double bid_price = 4;</code>
     */
    public boolean hasBidPrice() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional double bid_price = 4;</code>
     */
    public double getBidPrice() {
      return bidPrice_;
    }

    // optional double ask_size = 5;
    public static final int ASK_SIZE_FIELD_NUMBER = 5;
    private double askSize_;
    /**
     * <code>optional double ask_size = 5;</code>
     */
    public boolean hasAskSize() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional double ask_size = 5;</code>
     */
    public double getAskSize() {
      return askSize_;
    }

    // optional double ask_price = 6;
    public static final int ASK_PRICE_FIELD_NUMBER = 6;
    private double askPrice_;
    /**
     * <code>optional double ask_price = 6;</code>
     */
    public boolean hasAskPrice() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional double ask_price = 6;</code>
     */
    public double getAskPrice() {
      return askPrice_;
    }

    // required .fastquote.Price.Type type = 7 [default = SPOT];
    public static final int TYPE_FIELD_NUMBER = 7;
    private Type type_;
    /**
     * <code>required .fastquote.Price.Type type = 7 [default = SPOT];</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required .fastquote.Price.Type type = 7 [default = SPOT];</code>
     */
    public Type getType() {
      return type_;
    }

    private void initFields() {
      venueId_ = 0;
      symbol_ = "";
      bidSize_ = 0D;
      bidPrice_ = 0D;
      askSize_ = 0D;
      askPrice_ = 0D;
      type_ = Type.SPOT;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasVenueId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSymbol()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeSFixed32(1, venueId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getSymbolBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeDouble(3, bidSize_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeDouble(4, bidPrice_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeDouble(5, askSize_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeDouble(6, askPrice_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeEnum(7, type_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSFixed32Size(1, venueId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getSymbolBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, bidSize_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, bidPrice_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, askSize_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(6, askPrice_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(7, type_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static Price parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Price parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Price parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Price parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Price parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Price parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static Price parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static Price parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static Price parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Price parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Price prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code fastquote.Price}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements PriceOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return PriceProtos.internal_static_fastquote_Price_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return PriceProtos.internal_static_fastquote_Price_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Price.class, Builder.class);
      }

      // Construct using org.fabric3.samples.fastquote.price.PriceProtos.Price.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        venueId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        symbol_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        bidSize_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000004);
        bidPrice_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000008);
        askSize_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000010);
        askPrice_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000020);
        type_ = Type.SPOT;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return PriceProtos.internal_static_fastquote_Price_descriptor;
      }

      public Price getDefaultInstanceForType() {
        return Price.getDefaultInstance();
      }

      public Price build() {
        Price result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Price buildPartial() {
        Price result = new Price(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.venueId_ = venueId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.symbol_ = symbol_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.bidSize_ = bidSize_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.bidPrice_ = bidPrice_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.askSize_ = askSize_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.askPrice_ = askPrice_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.type_ = type_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Price) {
          return mergeFrom((Price)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Price other) {
        if (other == Price.getDefaultInstance()) return this;
        if (other.hasVenueId()) {
          setVenueId(other.getVenueId());
        }
        if (other.hasSymbol()) {
          bitField0_ |= 0x00000002;
          symbol_ = other.symbol_;
          onChanged();
        }
        if (other.hasBidSize()) {
          setBidSize(other.getBidSize());
        }
        if (other.hasBidPrice()) {
          setBidPrice(other.getBidPrice());
        }
        if (other.hasAskSize()) {
          setAskSize(other.getAskSize());
        }
        if (other.hasAskPrice()) {
          setAskPrice(other.getAskPrice());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasVenueId()) {
          
          return false;
        }
        if (!hasSymbol()) {
          
          return false;
        }
        if (!hasType()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Price parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Price) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required sfixed32 venue_id = 1;
      private int venueId_ ;
      /**
       * <code>required sfixed32 venue_id = 1;</code>
       */
      public boolean hasVenueId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required sfixed32 venue_id = 1;</code>
       */
      public int getVenueId() {
        return venueId_;
      }
      /**
       * <code>required sfixed32 venue_id = 1;</code>
       */
      public Builder setVenueId(int value) {
        bitField0_ |= 0x00000001;
        venueId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required sfixed32 venue_id = 1;</code>
       */
      public Builder clearVenueId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        venueId_ = 0;
        onChanged();
        return this;
      }

      // required string symbol = 2;
      private Object symbol_ = "";
      /**
       * <code>required string symbol = 2;</code>
       */
      public boolean hasSymbol() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string symbol = 2;</code>
       */
      public String getSymbol() {
        Object ref = symbol_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          symbol_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>required string symbol = 2;</code>
       */
      public com.google.protobuf.ByteString
          getSymbolBytes() {
        Object ref = symbol_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          symbol_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string symbol = 2;</code>
       */
      public Builder setSymbol(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        symbol_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string symbol = 2;</code>
       */
      public Builder clearSymbol() {
        bitField0_ = (bitField0_ & ~0x00000002);
        symbol_ = getDefaultInstance().getSymbol();
        onChanged();
        return this;
      }
      /**
       * <code>required string symbol = 2;</code>
       */
      public Builder setSymbolBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        symbol_ = value;
        onChanged();
        return this;
      }

      // optional double bid_size = 3;
      private double bidSize_ ;
      /**
       * <code>optional double bid_size = 3;</code>
       */
      public boolean hasBidSize() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional double bid_size = 3;</code>
       */
      public double getBidSize() {
        return bidSize_;
      }
      /**
       * <code>optional double bid_size = 3;</code>
       */
      public Builder setBidSize(double value) {
        bitField0_ |= 0x00000004;
        bidSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double bid_size = 3;</code>
       */
      public Builder clearBidSize() {
        bitField0_ = (bitField0_ & ~0x00000004);
        bidSize_ = 0D;
        onChanged();
        return this;
      }

      // optional double bid_price = 4;
      private double bidPrice_ ;
      /**
       * <code>optional double bid_price = 4;</code>
       */
      public boolean hasBidPrice() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional double bid_price = 4;</code>
       */
      public double getBidPrice() {
        return bidPrice_;
      }
      /**
       * <code>optional double bid_price = 4;</code>
       */
      public Builder setBidPrice(double value) {
        bitField0_ |= 0x00000008;
        bidPrice_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double bid_price = 4;</code>
       */
      public Builder clearBidPrice() {
        bitField0_ = (bitField0_ & ~0x00000008);
        bidPrice_ = 0D;
        onChanged();
        return this;
      }

      // optional double ask_size = 5;
      private double askSize_ ;
      /**
       * <code>optional double ask_size = 5;</code>
       */
      public boolean hasAskSize() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional double ask_size = 5;</code>
       */
      public double getAskSize() {
        return askSize_;
      }
      /**
       * <code>optional double ask_size = 5;</code>
       */
      public Builder setAskSize(double value) {
        bitField0_ |= 0x00000010;
        askSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double ask_size = 5;</code>
       */
      public Builder clearAskSize() {
        bitField0_ = (bitField0_ & ~0x00000010);
        askSize_ = 0D;
        onChanged();
        return this;
      }

      // optional double ask_price = 6;
      private double askPrice_ ;
      /**
       * <code>optional double ask_price = 6;</code>
       */
      public boolean hasAskPrice() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional double ask_price = 6;</code>
       */
      public double getAskPrice() {
        return askPrice_;
      }
      /**
       * <code>optional double ask_price = 6;</code>
       */
      public Builder setAskPrice(double value) {
        bitField0_ |= 0x00000020;
        askPrice_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double ask_price = 6;</code>
       */
      public Builder clearAskPrice() {
        bitField0_ = (bitField0_ & ~0x00000020);
        askPrice_ = 0D;
        onChanged();
        return this;
      }

      // required .fastquote.Price.Type type = 7 [default = SPOT];
      private Type type_ = Type.SPOT;
      /**
       * <code>required .fastquote.Price.Type type = 7 [default = SPOT];</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required .fastquote.Price.Type type = 7 [default = SPOT];</code>
       */
      public Type getType() {
        return type_;
      }
      /**
       * <code>required .fastquote.Price.Type type = 7 [default = SPOT];</code>
       */
      public Builder setType(Type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000040;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .fastquote.Price.Type type = 7 [default = SPOT];</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000040);
        type_ = Type.SPOT;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:fastquote.Price)
    }

    static {
      defaultInstance = new Price(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:fastquote.Price)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_fastquote_Price_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_fastquote_Price_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\013price.proto\022\tfastquote\"\260\001\n\005Price\022\020\n\010ve" +
      "nue_id\030\001 \002(\017\022\016\n\006symbol\030\002 \002(\t\022\020\n\010bid_size" +
      "\030\003 \001(\001\022\021\n\tbid_price\030\004 \001(\001\022\020\n\010ask_size\030\005 " +
      "\001(\001\022\021\n\task_price\030\006 \001(\001\022)\n\004type\030\007 \002(\0162\025.f" +
      "astquote.Price.Type:\004SPOT\"\020\n\004Type\022\010\n\004SPO" +
      "T\020\000B2\n#org.fabric3.samples.fastquote.pri" +
      "ceB\013PriceProtos"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_fastquote_Price_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_fastquote_Price_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_fastquote_Price_descriptor,
              new String[] { "VenueId", "Symbol", "BidSize", "BidPrice", "AskSize", "AskPrice", "Type", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
